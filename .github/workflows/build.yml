name: "Build KernelSU only"

env:
  OUT_DIR: "out"

on:
  workflow_dispatch:

jobs:
  Build-KernelSU:
    name: "üêé Build KernelSU"
    runs-on: ubuntu-latest

    env:
      kernelName: "DogDay-KernelSU"
      kernelRepo: "https://github.com/PixelExperience-Devices/kernel_xiaomi_oxygen"
      kernelBranch: "thirteen"
      kernelDevice: "oxygen"
      DEFCONFIG_NAME: "oxygen_defconfig"
      ARCH: "arm64"
      CROSS_COMPILE: "aarch64-linux-android-"
      CLANG_TRIPLE: "aarch64-linux-gnu-"
      CC: "clang"
      AR: "llvm-ar"
      LD: "ld.lld"
      OBJCOPY: "llvm-objcopy"
      OBJDUMP: "llvm-objdump"
      READELF: "llvm-readelf"

    steps:
      - name: "‚ú® Checkout"
        uses: actions/checkout@v4

      - name: "‚≠ê Install prerequisites"
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            bc bison build-essential ccache curl flex git libssl-dev \
            libelf-dev libncurses5-dev lz4 lz4-dev python3 wget unzip \
            device-tree-compiler zstd libfl-dev

      - name: "üåü Clone kernel source"
        run: |
          git clone --depth=1 --branch ${{ env.kernelBranch }} ${{ env.kernelRepo }} ${{ env.kernelName }}

      - name: "üõ†Ô∏è Setup AOSP clang"
        run: |
          git clone --depth=1 https://github.com/Neutron-Toolchains/clang-aosp prebuilts/clang/host/linux-x86/clang-aosp
          echo "$(pwd)/prebuilts/clang/host/linux-x86/clang-aosp/bin" >> $GITHUB_PATH

      - name: "üòã Patch KernelSU"
        working-directory: ${{ env.kernelName }}
        run: |
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -

          # ÈíàÂØπ ‚â§5.4 ÂÜÖÊ†∏ÊâìË°•‰∏Å
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/.github/patches/5.4/0001-kernel-5.4.patch" | patch -p1

          # ÊâìÂºÄÂøÖË¶ÅÈÖçÁΩÆ
          {
            echo "CONFIG_KPROBES=y"
            echo "CONFIG_HAVE_KPROBES=y"
            echo "CONFIG_KPROBE_EVENTS=y"
            echo "CONFIG_OVERLAY_FS=y"
            echo "CONFIG_SECURITY_SELINUX=y"
          } >> arch/${{ env.ARCH }}/configs/${{ env.DEFCONFIG_NAME }}

      - name: "üëç Make defconfig"
        working-directory: ${{ env.kernelName }}
        run: |
          make O=${{ env.OUT_DIR }} ${{ env.DEFCONFIG_NAME }} \
            ARCH=${{ env.ARCH }} \
            CC=clang \
            CROSS_COMPILE=${{ env.CROSS_COMPILE }} \
            CLANG_TRIPLE=${{ env.CLANG_TRIPLE }} \
            AR=llvm-ar \
            LD=ld.lld \
            OBJCOPY=llvm-objcopy

      - name: "üé∂ Build kernel"
        working-directory: ${{ env.kernelName }}
        run: |
          make O=${{ env.OUT_DIR }} -j$(nproc) \
            ARCH=${{ env.ARCH }} \
            CC=clang \
            CROSS_COMPILE=${{ env.CROSS_COMPILE }} \
            CLANG_TRIPLE=${{ env.CLANG_TRIPLE }} \
            AR=llvm-ar \
            LD=ld.lld \
            OBJCOPY=llvm-objcopy

      - name: "üíõ Upload Image"
        uses: actions/upload-artifact@v4
        with:
          name: Image-KernelSU-${{ env.kernelDevice }}
          path: ${{ env.OUT_DIR }}/arch/${{ env.ARCH }}/boot/Image
          if-no-files-found: error
          retention-days: 7

      - name: "üíô Upload Image.gz"
        uses: actions/upload-artifact@v4
        with:
          name: Image.gz-KernelSU-${{ env.kernelDevice }}
          path: ${{ env.OUT_DIR }}/arch/${{ env.ARCH }}/boot/Image.gz
          if-no-files-found: ignore
          retention-days: 7

      - name: "üíú Upload dtb"
        uses: actions/upload-artifact@v4
        with:
          name: dtb-KernelSU-${{ env.kernelDevice }}
          path: ${{ env.OUT_DIR }}/arch/${{ env.ARCH }}/boot/dtb
          if-no-files-found: ignore
          retention-days: 7

      - name: "‚ù§Ô∏è Upload dtbo.img"
        uses: actions/upload-artifact@v4
        with:
          name: dtbo-KernelSU-${{ env.kernelDevice }}
          path: ${{ env.OUT_DIR }}/arch/${{ env.ARCH }}/boot/dtbo.img
          if-no-files-found: ignore
          retention-days: 7
